name: Java CI with Gradle

on:
  push:
    branches: 
      - develop
  pull_request:
    branches: 
      - develop

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: gradle/wrapper-validation-action@v1
      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and Push a Main Docker Image
        uses: docker/build-push-action@v3
        with:
            context: .
            platforms: linux/amd64,linux/arm64
            push: true
            tags: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}:latest-dev

      - name: Setup Docker Compose Production Configuration
        run: |
          mkdir .deploy
          cp ./scripts/deploy.sh docker-compose-production.yml .deploy/
     
      - name: 🍃 deploy.sh 파일을 EC2 server로 전달합니다.
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.KEY }}
          port: 22
          source: "./deploy"
          target: "/home/ubuntu/"
        
      - name: 🍃 docker hub에서 pull 후 deploy합니다.
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.KEY }}
          port: 22
          script: |
             sudo docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}:latest-dev          
             chmod 777 ./deploy.sh
             ./deploy.sh
             docker image prune -f
